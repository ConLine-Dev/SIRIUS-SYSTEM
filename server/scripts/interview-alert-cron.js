const cron = require('node-cron');
const { sendInterviewAlertEmail, sendInterviewReminderEmail } = require('../controllers/hr-job-openings');

// Configura√ß√£o do cron job para enviar email diariamente √†s 7:00
const scheduleInterviewAlert = () => {
  // Executar todos os dias √†s 7:00 da manh√£
  cron.schedule('0 7 * * *', async () => {
    console.log('üïê Executando agendamento de alerta de entrevistas (7:00)...');
    
    try {
      await sendInterviewAlertEmail();
      console.log('‚úÖ Email de alerta de entrevistas enviado com sucesso!');
    } catch (error) {
      console.error('‚ùå Erro ao enviar email de alerta de entrevistas:', error);
    }
  }, {
    scheduled: true,
    timezone: "America/Sao_Paulo" // Fuso hor√°rio de Bras√≠lia
  });
  
  // Executar a cada minuto para verificar entrevistas pr√≥ximas (15 min antes)
  cron.schedule('* * * * *', async () => {
    try {
      await sendInterviewReminderEmail();
    } catch (error) {
      console.error('‚ùå Erro ao verificar entrevistas pr√≥ximas:', error);
    }
  }, {
    scheduled: true,
    timezone: "America/Sao_Paulo"
  });
  
  console.log('üìÖ Agendamento de alerta de entrevistas configurado:');
  console.log('   - 7:00: Email di√°rio com todas as entrevistas do dia');
  console.log('   - A cada minuto: Verifica√ß√£o de entrevistas 15 min antes');
};

// Fun√ß√£o para executar manualmente (para testes)
const runInterviewAlert = async () => {
  console.log('üß™ Executando teste manual de alerta de entrevistas...');
  
  try {
    await sendInterviewAlertEmail();
    console.log('‚úÖ Teste manual executado com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro no teste manual:', error);
  }
};

// Fun√ß√£o para executar teste de lembrete
const runInterviewReminder = async () => {
  console.log('üß™ Executando teste manual de lembrete de entrevistas...');
  
  try {
    await sendInterviewReminderEmail();
    console.log('‚úÖ Teste manual de lembrete executado com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro no teste manual de lembrete:', error);
  }
};

// Exportar fun√ß√µes
module.exports = {
  scheduleInterviewAlert,
  runInterviewAlert,
  runInterviewReminder
};

// Se executado diretamente, rodar teste manual
if (require.main === module) {
  const args = process.argv.slice(2);
  if (args.includes('--reminder')) {
    runInterviewReminder();
  } else {
    runInterviewAlert();
  }
} 