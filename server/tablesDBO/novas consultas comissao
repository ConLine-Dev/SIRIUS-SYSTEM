WITH CTE_Logistica AS (
   SELECT
      Lhs.IdLogistica_House,
      Lhs.IdCliente,
      Lhs.IdImportador,
      Lhs.IdExportador,
      Lhs.IdDespachante_Aduaneiro,

      CASE
         WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 1 THEN 'EA'
         WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 2 THEN 'EM'
         WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 3 THEN 'TE'
         WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 1 THEN 'IA'
         WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 2 THEN 'IM'
         WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 3 THEN 'TI'
         WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 1 THEN 'NA'
         WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 2 THEN 'CB'
         WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 3 THEN 'TN'
      END AS Modalidade,

      CASE
         WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 1 THEN 1
         WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 2 THEN 2
         WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 3 THEN 3
         WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 1 THEN 4
         WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 2 THEN 5
         WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 3 THEN 6
         WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 1 THEN 7
         WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 2 THEN 8
         WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 3 THEN 9
      END AS ModalidadeCodigo,

      Lhs.Numero_Processo,
      Lhs.Data_Abertura_Processo AS Abertura_Processo,
      CONVERT(VARCHAR(10), Lhs.Data_Abertura_Processo, 23) AS Abertura_Processo_Convertida,    

      CASE
         WHEN Lms.Tipo_Operacao = 1 THEN COALESCE(Lms.Data_Embarque, Lms.Data_Previsao_Embarque)
         WHEN Lms.Tipo_Operacao = 2 THEN COALESCE(Lms.Data_Desembarque, Lms.Data_Previsao_Desembarque)
         ELSE COALESCE(Lms.Data_Embarque, Lms.Data_Previsao_Embarque)
      END AS Data_Compensacao,

      CASE
         WHEN Lms.Tipo_Operacao = 1 THEN COALESCE(CONVERT(VARCHAR, Lms.Data_Embarque, 23), CONVERT(VARCHAR, Lms.Data_Previsao_Embarque,23))
         WHEN Lms.Tipo_Operacao = 2 THEN COALESCE(CONVERT(VARCHAR, Lms.Data_Desembarque,23), CONVERT(VARCHAR,Lms.Data_Previsao_Desembarque,23))
         ELSE COALESCE(CONVERT(VARCHAR, Lms.Data_Embarque, 23), CONVERT(VARCHAR,Lms.Data_Previsao_Embarque,23))
      END AS Data_Compensacao_Convertido,

      Urf.Data_Frete,

      COALESCE(Lms.Data_Embarque, Lms.Data_Previsao_Embarque) AS 'ETD/ATD',

      COALESCE(Lms.Data_Desembarque, Lms.Data_Previsao_Desembarque) AS 'ETA/ATA',

      CASE Lhs.Tipo_Carga
         WHEN 1 THEN 'Aéreo'
         WHEN 2 THEN 'Break-Bulk'
         WHEN 3 THEN 'FCL'
         WHEN 4 THEN 'LCL'
         WHEN 5 THEN 'RO-RO'
         WHEN 6 THEN 'Rodoviário'
      END AS Tipo_Carga,

      CASE Lms.Situacao_Embarque
         WHEN 0 THEN 'Pré-processo'
         WHEN 1 THEN 'Aguardando embarque'
         WHEN 2 THEN 'Embarcado'
         WHEN 3 THEN 'Desembarque'
         WHEN 4 THEN 'Cancelado'
         WHEN 5 THEN 'Pendente'
         WHEN 6 THEN 'Autorizado'
         WHEN 7 THEN 'Coletado'
         WHEN 8 THEN 'Entregue'
         WHEN 9 THEN 'Aguardando prontidão da mercadoria'
         WHEN 10 THEN 'Aguardando booking finalizado'
         WHEN 11 THEN 'Aguardando coleta'
         WHEN 12 THEN 'Aguardando entrega'
      END AS Situacao_Embarque,

      Cli.Nome AS Cliente,
      Ven.Nome AS Vendedor,
      Ven.IdPessoa AS IdVendedor,
      Ins.Nome AS Inside_Sales,
      Ins.IdPessoa AS IdInside_Sales,
      Exp.Nome AS Exportador,
      Imp.Nome AS Importador,

      COALESCE(Lhs.Comissao_Vendedor_Pago, 0) AS Comissao_Vendedor_Pago,
      COALESCE(Lhs.Comissao_Inside_Sales_Pago, 0) AS Comissao_Inside_Sales_Pago,

      CASE Lhs.Situacao_Agenciamento
         WHEN 1 THEN 'Em aberto'
         WHEN 2 THEN 'Em Andamento'
         WHEN 3 THEN 'Lib. Faturamento'
         WHEN 4 THEN 'Faturamento'
         WHEN 5 THEN 'Finalizado'
         WHEN 6 THEN 'Auditado'
         WHEN 7 THEN 'Cancelado'
      END AS Situacao_Processo,

      CASE Lhs.Situacao_Recebimento
         WHEN 0 THEN 'Sem recebimento'
         WHEN 1 THEN 'Em aberto'
         WHEN 2 THEN 'Parcialmente recebido'
         WHEN 3 THEN 'Recebido'
      END AS Recebimento,

      CASE
         WHEN Lhs.Situacao_Recebimento = 0 THEN 0
         WHEN Lhs.Situacao_Recebimento = 1 THEN 1
         WHEN Lhs.Situacao_Recebimento = 2 THEN 2
         WHEN Lhs.Situacao_Recebimento = 3 THEN 3
         WHEN Lhs.Situacao_Recebimento = 3 AND Fcr.Status_Fatura = 'Quitado' AND Inc.Qtd_Fatura > 0 THEN 3
      END AS RecebimentoCodigo,

      Lhs.Data_Recebimento_Local AS Data_Recebimento,

      CASE Lhs.Situacao_Pagamento
         WHEN 0 THEN 'Sem pagamento'
         WHEN 1 THEN 'Em aberto'
         WHEN 2 THEN 'Parcialmente pago'
         WHEN 3 THEN 'Pago'
      END AS Pagamento,

      CASE
         WHEN Lhs.Situacao_Pagamento = 0 THEN 0
         WHEN Lhs.Situacao_Pagamento = 1 THEN 1
         WHEN Lhs.Situacao_Pagamento = 2 THEN 2
         WHEN Lhs.Situacao_Pagamento = 3 THEN 3
      END AS PagamentoCodigo,

      Lhs.Data_Pagamento_Local AS Data_Pagamento,

      CASE Lhs.Situacao_Acerto_Agente
         WHEN 0 THEN 'Sem acerto agente'
         WHEN 1 THEN 'Em aberto'
         WHEN 2 THEN 'Parcialmente pago'
         WHEN 3 THEN 'Pago'
      END AS Agente,

      Lhs.Situacao_Acerto_Agente AS AgenteCodigo,
      Lhs.Data_Acerto_Agente AS Data_Agente,
      (Lmo.Lucro_Estimado - COALESCE(Inc.Valor_Recebimento_Total, 0)) AS Valor_Estimado,       
      (Lmo.Lucro_Efetivo - COALESCE(Incbai.Valor_Recebimento_Total, 0)) AS Valor_Efetivo,      

      CASE
         WHEN Lmo.Total_Recebimento = Lmo.Total_Recebido THEN 1
         ELSE 0
      END AS Recebimento_Quitado,

      COALESCE(Qsc.Qtd_SContainer, 0) AS Cntr_Nao_Devolvidos,
      COALESCE(Qft.Qtd_Fatura, 0) AS Faturas_Nao_Finalizadas,
      COALESCE(Qsb.Qtd_SBaixa, 0) AS Faturas_Nao_Baixadas

   FROM
      mov_Logistica_House Lhs
   LEFT OUTER JOIN
      mov_Logistica_Master Lms ON Lms.IdLogistica_Master = Lhs.IdLogistica_Master
   LEFT OUTER JOIN
      mov_Logistica_Moeda Lmo ON Lmo.IdLogistica_House = Lhs.IdLogistica_House
   LEFT OUTER JOIN
      cad_Pessoa Cli ON Cli.IdPessoa = Lhs.IdCliente
   LEFT OUTER JOIN
      cad_Pessoa Ven ON Ven.IdPessoa = Lhs.IdVendedor
   LEFT OUTER JOIN
      mov_Projeto_Atividade_Responsavel Par ON Par.IdProjeto_Atividade = Lhs.IdProjeto_Atividade AND Par.IdPapel_Projeto = 12 --Inside Sales
   LEFT OUTER JOIN
      cad_Pessoa Ins ON Ins.IdPessoa = Par.IdResponsavel
   LEFT OUTER JOIN
      cad_Pessoa Exp ON Exp.IdPessoa = Lhs.IdExportador
   LEFT OUTER JOIN
      cad_Pessoa Imp ON Imp.IdPessoa = Lhs.IdImportador

   LEFT OUTER JOIN (
      SELECT
         Ltx.IdLogistica_House,
         MIN(Rfn.Data_Referencia) AS Data_Frete
      FROM
         mov_Logistica_Taxa Ltx
      LEFT OUTER JOIN
         mov_Logistica_Fatura Lft ON Lft.IdLogistica_House = Ltx.IdLogistica_House
      LEFT OUTER JOIN
         mov_Registro_Financeiro Rfn ON Rfn.IdRegistro_Financeiro = Lft.IdRegistro_Financeiro  
      WHERE
         Ltx.IdTaxa_Logistica_Exibicao IN (2,4,43,199,207,397,472)
      GROUP BY
         Ltx.IdLogistica_House
   ) Urf ON Urf.IdLogistica_House = Lhs.IdLogistica_House

   LEFT OUTER JOIN (
      SELECT
         Lmc.IdLogistica_House,
         Count(Lmc.IdLogistica_Maritima_Container) AS Qtd_SContainer
      FROM
         mov_Logistica_Maritima_Container Lmc
      WHERE
         Lmc.Data_Devolucao IS NULL
      GROUP BY
         Lmc.IdLogistica_House
   ) Qsc ON Qsc.IdLogistica_House = Lhs.IdLogistica_House

   LEFT OUTER JOIN(
      SELECT
         Lft.IdLogistica_House,
         COUNT(Fnc.IdRegistro_Financeiro) AS Qtd_Fatura
      FROM
         mov_Logistica_Fatura Lft
      LEFT OUTER JOIN
         mov_Fatura_Financeira Fnc ON Fnc.IdRegistro_Financeiro = Lft.IdRegistro_Financeiro    
      WHERE
         Fnc.tipo = 1 --Fatura
      GROUP BY
         Lft.IdLogistica_House
   ) Qft ON Qft.IdLogistica_House = Lhs.IdLogistica_House

   LEFT OUTER JOIN (
      SELECT
         Lft.IdLogistica_House,
         Count(Lft.IdRegistro_Financeiro) AS Qtd_SBaixa
      FROM
         vis_Logistica_Fatura Lft
      LEFT OUTER JOIN
         mov_Fatura_Financeira Ffn ON Ffn.IdRegistro_Financeiro = Lft.IdRegistro_Financeiro    
      WHERE
         Lft.Situacao = 1 -- EM ABERTO
      GROUP BY
         Lft.IdLogistica_House
   ) Qsb ON Qsb.IdLogistica_House = Lhs.IdLogistica_House

   -- Verifica se todas as faturas de PAGAMENTO estão quitadas ou não
   LEFT OUTER JOIN (
      SELECT
         Lft.IdLogistica_House,
         CASE
               WHEN COUNT(CASE WHEN Lft.Situacao = 1 /* FATURA ABERTAS */ AND Lft.Natureza = 0 /*DEBITO*/ THEN 1 END) > 0 THEN 'Fatura_Aberta'
               ELSE 'Quitado'
         END AS Status_Fatura
      FROM
         vis_Logistica_Fatura Lft
      GROUP BY
         Lft.IdLogistica_House
   ) Fde ON Fde.IdLogistica_House = Lhs.IdLogistica_House

   -- Verifica se todas as faturas de RECEBIMENTO estão quitadas ou não
   LEFT OUTER JOIN (
      SELECT
         Lft.IdLogistica_House,
         CASE
            WHEN COUNT(CASE WHEN Lft.Situacao = 1 /* FATURA ABERTAS */ AND Lft.Natureza = 1 /*CREDITO*/ THEN 1 END) > 0 THEN 'Fatura_Aberta'
            ELSE 'Quitado'
         END AS Status_Fatura
      FROM
         vis_Logistica_Fatura Lft
      GROUP BY
         Lft.IdLogistica_House
   ) Fcr ON Fcr.IdLogistica_House = Lhs.IdLogistica_House

   -- Soma o valor das taxas de incentivo sem considerar se esta baixado ou nao
   LEFT OUTER JOIN (
      SELECT
         Ltx.IdLogistica_House,
         COUNT(Ltx.IdRegistro_Recebimento) AS Qtd_Fatura,
         CASE
            WHEN Ltx.IdMoeda_Recebimento != 110 /*Real*/ THEN ROUND((Ltx.Valor_Recebimento_Total * Lfc.Fator_Conversao), 2)
            ELSE Ltx.Valor_Recebimento_Total
         END AS Valor_Recebimento_Total
      FROM
         mov_Logistica_Taxa Ltx
      LEFT OUTER JOIN
         vis_Logistica_Fatura Vlf ON Vlf.IdRegistro_Financeiro = Ltx.IdRegistro_Recebimento
      LEFT OUTER JOIN
         mov_Logistica_Fatura_Conversao Lfc ON Lfc.IdLogistica_Fatura = Vlf.IdRegistro_Financeiro AND Ltx.IdMoeda_Recebimento = Lfc.IdMoeda_Origem
      WHERE
         Ltx.IdTaxa_Logistica_Exibicao IN (245 /*INCENTIVO ASIA*/, 441/*INCENTIVO TERMINAL*/, 517/*INCENTIVO ASIA MARITIMO*/)
      GROUP BY
         Ltx.IdLogistica_House,
         Ltx.IdMoeda_Recebimento,
         Ltx.Valor_Recebimento_Total,
         Lfc.Fator_Conversao
   ) Inc ON Inc.IdLogistica_House = Lhs.IdLogistica_House

   -- Soma o valor das taxas de incentivo que estejam em faturas baixadas
   LEFT OUTER JOIN (
      SELECT
         Ltx.IdLogistica_House,
         CASE
            WHEN Ltx.IdMoeda_Recebimento != 110 /*Real*/ THEN ROUND((Ltx.Valor_Recebimento_Total * Lfc.Fator_Conversao), 2)
            ELSE Ltx.Valor_Recebimento_Total
         END AS Valor_Recebimento_Total
      FROM
         mov_Logistica_Taxa Ltx
      LEFT OUTER JOIN
         vis_Logistica_Fatura Vlf ON Vlf.IdRegistro_Financeiro = Ltx.IdRegistro_Recebimento
      LEFT OUTER JOIN
         mov_Logistica_Fatura_Conversao Lfc ON Lfc.IdLogistica_Fatura = Vlf.IdRegistro_Financeiro AND Ltx.IdMoeda_Recebimento = Lfc.IdMoeda_Origem
      WHERE
         Ltx.IdTaxa_Logistica_Exibicao IN (245 /*INCENTIVO ASIA*/, 441/*INCENTIVO TERMINAL*/, 517/*INCENTIVO ASIA MARITIMO*/)
         AND Vlf.Situacao = 2 /*QUITADA*/
   ) Incbai ON Incbai.IdLogistica_House = Lhs.IdLogistica_House

   WHERE
   Lhs.Situacao_Agenciamento NOT IN (7)
      AND Lhs.Numero_Processo NOT LIKE '%test%'
      AND Lhs.Numero_Processo NOT LIKE '%DEMU%'
      AND Lhs.Agenciamento_Carga = 1
      AND YEAR(Lhs.Data_Abertura_Processo) >= 2022
      AND Lmo.IdMoeda = 110
),
Verifica_Fatura_Vencida AS (
   SELECT
      Psa.IdPessoa,
      Psa.Nome AS Pessoa,
      COUNT(Vlf.IdRegistro_Financeiro) AS Qtd_Fatura_Vencidas,
      DATEDIFF(DAY, MIN(Fnc.Data_Vencimento), GETDATE()) AS Dias_Vencido,
      FORMAT(SUM(Vlf.Valor_Total * Vlf.Fator_Corrente), 'C', 'pt-BR') AS Valor_Vencido,
      CASE
         -- Pessoa com acordo e com mais de uma fatura vencida
         WHEN COALESCE(Cpg.IdCondicao_Pagamento, 0) NOT IN (1, 18, 17, 0) AND COUNT(Vlf.IdRegistro_Financeiro) > 1 THEN CONCAT('Com acordo e possui ', COUNT(Vlf.IdRegistro_Financeiro), ' faturas vencidas com valor total de ', FORMAT(SUM(Vlf.Valor_Total * Vlf.Fator_Corrente), 'C', 'pt-BR'))
         -- Pessoa com acordo e com uma fatura vencida
         WHEN COALESCE(Cpg.IdCondicao_Pagamento, 0) NOT IN (1, 18, 17, 0) AND COUNT(Vlf.IdRegistro_Financeiro) = 1 THEN CONCAT('Com acordo e possui ', COUNT(Vlf.IdRegistro_Financeiro), ' fatura vencida há ', DATEDIFF(DAY, MIN(Fnc.Data_Vencimento), GETDATE()), ' dias, com valor total de ', FORMAT(SUM(Vlf.Valor_Total * Vlf.Fator_Corrente), 'C', 'pt-BR'))
         -- Pessoa sem acordo e com mais de uma fatura vencida
         WHEN COALESCE(Cpg.IdCondicao_Pagamento, 0) IN (1, 18, 17, 0) AND COUNT(Vlf.IdRegistro_Financeiro) > 1 THEN CONCAT('Sem acordo e possui ', COUNT(Vlf.IdRegistro_Financeiro), ' faturas vencidas com valor total de ', FORMAT(SUM(Vlf.Valor_Total * Vlf.Fator_Corrente), 'C', 'pt-BR'))
         -- Pessoa sem acordo e com uma fatura vencida
         WHEN COALESCE(Cpg.IdCondicao_Pagamento, 0) IN (1, 18, 17, 0) AND COUNT(Vlf.IdRegistro_Financeiro) = 1 THEN CONCAT('Sem acordo e possui ', COUNT(Vlf.IdRegistro_Financeiro), ' fatura vencida há ', DATEDIFF(DAY, MIN(Fnc.Data_Vencimento), GETDATE()), ' dias, com valor total de ', FORMAT(SUM(Vlf.Valor_Total * Vlf.Fator_Corrente), 'C', 'pt-BR'))
      END AS Status_Faturas
   FROM
      mov_Logistica_House Lhs
   LEFT OUTER JOIN
      mov_Logistica_Master Lms ON Lms.IdLogistica_Master = Lhs.IdLogistica_Master
   LEFT OUTER JOIN
      vis_Logistica_Fatura Vlf ON Vlf.IdLogistica_House = Lhs.IdLogistica_House
   LEFT OUTER JOIN
      mov_Fatura_Financeira Fnc ON Fnc.IdRegistro_Financeiro = Vlf.IdRegistro_Financeiro
   LEFT OUTER JOIN
      cad_Pessoa Psa ON Psa.IdPessoa = Vlf.IdPessoa
   LEFT OUTER JOIN
      cad_Contrato_Financeiro Cfn on Cfn.IdContrato_Financeiro = Psa.IdContrato_Financeiro
   LEFT OUTER JOIN
      cad_Contrato_Logistica_Item Cli on Cli.IdContrato_Financeiro = Cfn.IdContrato_Financeiro
   LEFT OUTER JOIN
      cad_Condicao_Pagamento Cpg on Cpg.IdCondicao_Pagamento = Cli.IdCondicao_Pagamento
   WHERE
      Fnc.Data_Vencimento < GETDATE()
      AND Fnc.Tipo = 2 -- Finalizada
      AND Fnc.Situacao NOT IN (2) -- Quitado
      AND Lhs.Situacao_Agenciamento NOT IN (7) -- Não esteja cancelado
      AND Lms.Situacao_Embarque NOT IN (4) -- Cancelado
      AND Vlf.Tipo_Fatura = 2 -- Recebimento
      AND (Vlf.IdPessoa = Lhs.IdCliente OR Vlf.IdPessoa = Lhs.IdImportador OR Vlf.IdPessoa = Lhs.IdExportador OR Vlf.IdPessoa = Lhs.IdDespachante_Aduaneiro)
      AND Lhs.Numero_Processo NOT LIKE '%test%'
   GROUP BY
      Psa.Nome,
      Psa.IdPessoa,
      Cpg.IdCondicao_Pagamento
)
SELECT
   Vfv.Status_Faturas,
   Vfv.Qtd_Fatura_Vencidas,
   Vfv.Dias_Vencido,
   Vfv.Valor_Vencido,
   Vfv.IdPessoa AS Pessoa_Fatura,
   Cte.*
FROM
   CTE_Logistica Cte
LEFT OUTER JOIN
   Verifica_Fatura_Vencida Vfv ON (Vfv.IdPessoa = Cte.IdCliente OR Vfv.IdPessoa = Cte.IdImportador OR Vfv.IdPessoa = Cte.IdExportador OR Vfv.IdPessoa = Cte.IdDespachante_Aduaneiro)




   SELECT
   Lhs.Numero_Processo,
   FORMAT(SUM(Vlf.Valor_Total * Vlf.Fator_Corrente), 'C', 'pt-BR') AS Valor_Total,
   DATEDIFF(DAY, MIN(Fnc.Data_Vencimento), GETDATE()) AS Dias_Vencidos
FROM
   mov_Logistica_House Lhs
LEFT OUTER JOIN
   mov_Logistica_Master Lms ON Lms.IdLogistica_Master = Lhs.IdLogistica_Master
LEFT OUTER JOIN
   vis_Logistica_Fatura Vlf ON Vlf.IdLogistica_House = Lhs.IdLogistica_House
LEFT OUTER JOIN
   mov_Fatura_Financeira Fnc ON Fnc.IdRegistro_Financeiro = Vlf.IdRegistro_Financeiro
LEFT OUTER JOIN
   cad_Pessoa Psa ON Psa.IdPessoa = Vlf.IdPessoa
LEFT OUTER JOIN
   cad_Contrato_Financeiro Cfn on Cfn.IdContrato_Financeiro = Psa.IdContrato_Financeiro
LEFT OUTER JOIN
   cad_Contrato_Logistica_Item Cli on Cli.IdContrato_Financeiro = Cfn.IdContrato_Financeiro
LEFT OUTER JOIN
   cad_Condicao_Pagamento Cpg on Cpg.IdCondicao_Pagamento = Cli.IdCondicao_Pagamento
WHERE
   Fnc.Data_Vencimento < GETDATE()
   AND Fnc.Tipo = 2 -- Finalizada
   AND Fnc.Situacao NOT IN (2) -- Quitado
   AND Lhs.Situacao_Agenciamento NOT IN (7) -- Não esteja cancelado
   AND Lms.Situacao_Embarque NOT IN (4) -- Cancelado
   AND Vlf.Tipo_Fatura = 2 -- Recebimento
   AND (Vlf.IdPessoa = Lhs.IdCliente OR Vlf.IdPessoa = Lhs.IdImportador OR Vlf.IdPessoa = Lhs.IdDespachante_Aduaneiro)
   AND Lhs.Numero_Processo NOT LIKE '%test%'
   AND Vlf.IdPessoa = :Pessoa_Fatura
GROUP BY
   Lhs.Numero_Processo




   BACKUP


    const sql = `WITH CTE_Logistica AS (
          SELECT
             Lhs.IdLogistica_House,
       
             CASE
                WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 1 THEN 'EA'
                WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 2 THEN 'EM'
                WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 3 THEN 'TE'
                WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 1 THEN 'IA'
                WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 2 THEN 'IM'
                WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 3 THEN 'TI'
                WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 1 THEN 'NA'
                WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 2 THEN 'CB'
                WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 3 THEN 'TN'
             END AS Modalidade,
       
             CASE
                WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 1 THEN 1
                WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 2 THEN 2
                WHEN Lms.Tipo_Operacao = 1 AND Lms.Modalidade_Processo = 3 THEN 3
                WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 1 THEN 4
                WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 2 THEN 5
                WHEN Lms.Tipo_Operacao = 2 AND Lms.Modalidade_Processo = 3 THEN 6
                WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 1 THEN 7
                WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 2 THEN 8
                WHEN Lms.Tipo_Operacao = 3 AND Lms.Modalidade_Processo = 3 THEN 9
             END AS ModalidadeCodigo,
       
             Lhs.Numero_Processo,
             Lhs.Data_Abertura_Processo AS Abertura_Processo,
             CONVERT(VARCHAR(10), Lhs.Data_Abertura_Processo, 23) AS Abertura_Processo_Convertida,    
       
             CASE
                WHEN Lms.Tipo_Operacao = 1 THEN COALESCE(Lms.Data_Embarque, Lms.Data_Previsao_Embarque)
                WHEN Lms.Tipo_Operacao = 2 THEN COALESCE(Lms.Data_Desembarque, Lms.Data_Previsao_Desembarque)
                ELSE COALESCE(Lms.Data_Embarque, Lms.Data_Previsao_Embarque)
             END AS Data_Compensacao,
       
             CASE
                WHEN Lms.Tipo_Operacao = 1 THEN COALESCE(CONVERT(VARCHAR, Lms.Data_Embarque, 23), CONVERT(VARCHAR, Lms.Data_Previsao_Embarque,23))
                WHEN Lms.Tipo_Operacao = 2 THEN COALESCE(CONVERT(VARCHAR, Lms.Data_Desembarque,23), CONVERT(VARCHAR,Lms.Data_Previsao_Desembarque,23))
                ELSE COALESCE(CONVERT(VARCHAR, Lms.Data_Embarque, 23), CONVERT(VARCHAR,Lms.Data_Previsao_Embarque,23))
             END AS Data_Compensacao_Convertido,
       
             Urf.Data_Frete,
       
             COALESCE(Lms.Data_Embarque, Lms.Data_Previsao_Embarque) AS 'ETD/ATD',
       
             COALESCE(Lms.Data_Desembarque, Lms.Data_Previsao_Desembarque) AS 'ETA/ATA',
       
             CASE Lhs.Tipo_Carga
                WHEN 1 THEN 'Aéreo'
                WHEN 2 THEN 'Break-Bulk'
                WHEN 3 THEN 'FCL'
                WHEN 4 THEN 'LCL'
                WHEN 5 THEN 'RO-RO'
                WHEN 6 THEN 'Rodoviário'
             END AS Tipo_Carga,
       
             CASE Lms.Situacao_Embarque
                WHEN 0 THEN 'Pré-processo'
                WHEN 1 THEN 'Aguardando embarque'
                WHEN 2 THEN 'Embarcado'
                WHEN 3 THEN 'Desembarque'
                WHEN 4 THEN 'Cancelado'
                WHEN 5 THEN 'Pendente'
                WHEN 6 THEN 'Autorizado'
                WHEN 7 THEN 'Coletado'
                WHEN 8 THEN 'Entregue'
                WHEN 9 THEN 'Aguardando prontidão da mercadoria'
                WHEN 10 THEN 'Aguardando booking finalizado'
                WHEN 11 THEN 'Aguardando coleta'
                WHEN 12 THEN 'Aguardando entrega'
             END AS Situacao_Embarque,
       
             Cli.Nome AS Cliente,
             Ven.Nome AS Vendedor,
             Ven.IdPessoa AS IdVendedor,
             Ins.Nome AS Inside_Sales,
             Ins.IdPessoa AS IdInside_Sales,
             Exp.Nome AS Exportador,
             Imp.Nome AS Importador,
       
             COALESCE(Lhs.Comissao_Vendedor_Pago, 0) AS Comissao_Vendedor_Pago,
             COALESCE(Lhs.Comissao_Inside_Sales_Pago, 0) AS Comissao_Inside_Sales_Pago,
       
             CASE Lhs.Situacao_Agenciamento
                WHEN 1 THEN 'Em aberto'
                WHEN 2 THEN 'Em Andamento'
                WHEN 3 THEN 'Lib. Faturamento'
                WHEN 4 THEN 'Faturamento'
                WHEN 5 THEN 'Finalizado'
                WHEN 6 THEN 'Auditado'
                WHEN 7 THEN 'Cancelado'
             END AS Situacao_Processo,
       
             CASE Lhs.Situacao_Recebimento
                WHEN 0 THEN 'Sem recebimento'
                WHEN 1 THEN 'Em aberto'
                WHEN 2 THEN 'Parcialmente recebido'
                WHEN 3 THEN 'Recebido'
             END AS Recebimento,
       
             CASE
                WHEN Lhs.Situacao_Recebimento = 0 THEN 0
                WHEN Lhs.Situacao_Recebimento = 1 THEN 1
                WHEN Lhs.Situacao_Recebimento = 2 THEN 2
                WHEN Lhs.Situacao_Recebimento = 3 THEN 3
                WHEN Lhs.Situacao_Recebimento = 3 AND Fcr.Status_Fatura = 'Quitado' AND Inc.Qtd_Fatura > 0 THEN 3
             END AS RecebimentoCodigo,
       
             Lhs.Data_Recebimento_Local AS Data_Recebimento,
       
             CASE Lhs.Situacao_Pagamento
                WHEN 0 THEN 'Sem pagamento'
                WHEN 1 THEN 'Em aberto'
                WHEN 2 THEN 'Parcialmente pago'
                WHEN 3 THEN 'Pago'
             END AS Pagamento,
       
             CASE
                WHEN Lhs.Situacao_Pagamento = 0 THEN 0
                WHEN Lhs.Situacao_Pagamento = 1 THEN 1
                WHEN Lhs.Situacao_Pagamento = 2 THEN 2
                WHEN Lhs.Situacao_Pagamento = 3 THEN 3
             END AS PagamentoCodigo,
       
             Lhs.Data_Pagamento_Local AS Data_Pagamento,
       
             CASE Lhs.Situacao_Acerto_Agente
                WHEN 0 THEN 'Sem acerto agente'
                WHEN 1 THEN 'Em aberto'
                WHEN 2 THEN 'Parcialmente pago'
                WHEN 3 THEN 'Pago'
             END AS Agente,
       
             Lhs.Situacao_Acerto_Agente AS AgenteCodigo,
             Lhs.Data_Acerto_Agente AS Data_Agente,
             (Lmo.Lucro_Estimado - COALESCE(Inc.Valor_Recebimento_Total, 0)) AS Valor_Estimado,       
             (Lmo.Lucro_Efetivo - COALESCE(Incbai.Valor_Recebimento_Total, 0)) AS Valor_Efetivo,      
       
             CASE
                WHEN Lmo.Total_Recebimento = Lmo.Total_Recebido THEN 1
                ELSE 0
             END AS Recebimento_Quitado,
       
             COALESCE(Qsc.Qtd_SContainer, 0) AS Cntr_Nao_Devolvidos,
             COALESCE(Qft.Qtd_Fatura, 0) AS Faturas_Nao_Finalizadas,
             COALESCE(Qsb.Qtd_SBaixa, 0) AS Faturas_Nao_Baixadas
       
          FROM
             mov_Logistica_House Lhs
          LEFT OUTER JOIN
             mov_Logistica_Master Lms ON Lms.IdLogistica_Master = Lhs.IdLogistica_Master
          LEFT OUTER JOIN
             mov_Logistica_Moeda Lmo ON Lmo.IdLogistica_House = Lhs.IdLogistica_House
          LEFT OUTER JOIN
             cad_Pessoa Cli ON Cli.IdPessoa = Lhs.IdCliente
          LEFT OUTER JOIN
             cad_Pessoa Ven ON Ven.IdPessoa = Lhs.IdVendedor
          LEFT OUTER JOIN
             mov_Projeto_Atividade_Responsavel Par ON Par.IdProjeto_Atividade = Lhs.IdProjeto_Atividade AND Par.IdPapel_Projeto = 12 --Inside Sales
          LEFT OUTER JOIN
             cad_Pessoa Ins ON Ins.IdPessoa = Par.IdResponsavel
          LEFT OUTER JOIN
             cad_Pessoa Exp ON Exp.IdPessoa = Lhs.IdExportador
          LEFT OUTER JOIN
             cad_Pessoa Imp ON Imp.IdPessoa = Lhs.IdImportador
       
          LEFT OUTER JOIN (
             SELECT
                Ltx.IdLogistica_House,
                MIN(Rfn.Data_Referencia) AS Data_Frete
             FROM
                mov_Logistica_Taxa Ltx
             LEFT OUTER JOIN
                mov_Logistica_Fatura Lft ON Lft.IdLogistica_House = Ltx.IdLogistica_House
             LEFT OUTER JOIN
                mov_Registro_Financeiro Rfn ON Rfn.IdRegistro_Financeiro = Lft.IdRegistro_Financeiro  
             WHERE
                Ltx.IdTaxa_Logistica_Exibicao IN (2,4,43,199,207,397,472)
             GROUP BY
                Ltx.IdLogistica_House
          ) Urf ON Urf.IdLogistica_House = Lhs.IdLogistica_House
       
          LEFT OUTER JOIN (
             SELECT
                Lmc.IdLogistica_House,
                Count(Lmc.IdLogistica_Maritima_Container) AS Qtd_SContainer
             FROM
                mov_Logistica_Maritima_Container Lmc
             WHERE
                Lmc.Data_Devolucao IS NULL
             GROUP BY
                Lmc.IdLogistica_House
          ) Qsc ON Qsc.IdLogistica_House = Lhs.IdLogistica_House
       
          LEFT OUTER JOIN(
             SELECT
                Lft.IdLogistica_House,
                COUNT(Fnc.IdRegistro_Financeiro) AS Qtd_Fatura
             FROM
                mov_Logistica_Fatura Lft
             LEFT OUTER JOIN
                mov_Fatura_Financeira Fnc ON Fnc.IdRegistro_Financeiro = Lft.IdRegistro_Financeiro    
             WHERE
                Fnc.tipo = 1 --Fatura
             GROUP BY
                Lft.IdLogistica_House
          ) Qft ON Qft.IdLogistica_House = Lhs.IdLogistica_House
       
          LEFT OUTER JOIN (
             SELECT
                Lft.IdLogistica_House,
                Count(Lft.IdRegistro_Financeiro) AS Qtd_SBaixa
             FROM
                vis_Logistica_Fatura Lft
             LEFT OUTER JOIN
                mov_Fatura_Financeira Ffn ON Ffn.IdRegistro_Financeiro = Lft.IdRegistro_Financeiro    
             WHERE
                Lft.Situacao = 1 -- EM ABERTO
             GROUP BY
                Lft.IdLogistica_House
          ) Qsb ON Qsb.IdLogistica_House = Lhs.IdLogistica_House
       
          -- Verifica se todas as faturas de PAGAMENTO estão quitadas ou não
          LEFT OUTER JOIN (
             SELECT
                Lft.IdLogistica_House,
                CASE
                      WHEN COUNT(CASE WHEN Lft.Situacao = 1 /* FATURA ABERTAS */ AND Lft.Natureza = 0 /*DEBITO*/ THEN 1 END) > 0 THEN 'Fatura_Aberta'
                      ELSE 'Quitado'
                END AS Status_Fatura
             FROM
                vis_Logistica_Fatura Lft
             GROUP BY
                Lft.IdLogistica_House
          ) Fde ON Fde.IdLogistica_House = Lhs.IdLogistica_House
       
          -- Verifica se todas as faturas de RECEBIMENTO estão quitadas ou não
          LEFT OUTER JOIN (
             SELECT
                Lft.IdLogistica_House,
                CASE
                   WHEN COUNT(CASE WHEN Lft.Situacao = 1 /* FATURA ABERTAS */ AND Lft.Natureza = 1 /*CREDITO*/ THEN 1 END) > 0 THEN 'Fatura_Aberta'
                   ELSE 'Quitado'
                END AS Status_Fatura
             FROM
                vis_Logistica_Fatura Lft
             GROUP BY
                Lft.IdLogistica_House
          ) Fcr ON Fcr.IdLogistica_House = Lhs.IdLogistica_House
       
          -- Soma o valor das taxas de incentivo sem considerar se esta baixado ou nao
          LEFT OUTER JOIN (
             SELECT
                Ltx.IdLogistica_House,
                COUNT(Ltx.IdRegistro_Recebimento) AS Qtd_Fatura,
                CASE
                   WHEN Ltx.IdMoeda_Recebimento != 110 /*Real*/ THEN ROUND((Ltx.Valor_Recebimento_Total * Lfc.Fator_Conversao), 2)
                   ELSE Ltx.Valor_Recebimento_Total
                END AS Valor_Recebimento_Total
             FROM
                mov_Logistica_Taxa Ltx
             LEFT OUTER JOIN
                vis_Logistica_Fatura Vlf ON Vlf.IdRegistro_Financeiro = Ltx.IdRegistro_Recebimento
             LEFT OUTER JOIN
                mov_Logistica_Fatura_Conversao Lfc ON Lfc.IdLogistica_Fatura = Vlf.IdRegistro_Financeiro AND Ltx.IdMoeda_Recebimento = Lfc.IdMoeda_Origem
             WHERE
                Ltx.IdTaxa_Logistica_Exibicao IN (245 /*INCENTIVO ASIA*/, 441/*INCENTIVO TERMINAL*/, 517/*INCENTIVO ASIA MARITIMO*/)
             GROUP BY
                Ltx.IdLogistica_House,
                Ltx.IdMoeda_Recebimento,
                Ltx.Valor_Recebimento_Total,
                Lfc.Fator_Conversao
          ) Inc ON Inc.IdLogistica_House = Lhs.IdLogistica_House
       
          -- Soma o valor das taxas de incentivo que estejam em faturas baixadas
          LEFT OUTER JOIN (
             SELECT
                Ltx.IdLogistica_House,
                CASE
                   WHEN Ltx.IdMoeda_Recebimento != 110 /*Real*/ THEN ROUND((Ltx.Valor_Recebimento_Total * Lfc.Fator_Conversao), 2)
                   ELSE Ltx.Valor_Recebimento_Total
                END AS Valor_Recebimento_Total
             FROM
                mov_Logistica_Taxa Ltx
             LEFT OUTER JOIN
                vis_Logistica_Fatura Vlf ON Vlf.IdRegistro_Financeiro = Ltx.IdRegistro_Recebimento
             LEFT OUTER JOIN
                mov_Logistica_Fatura_Conversao Lfc ON Lfc.IdLogistica_Fatura = Vlf.IdRegistro_Financeiro AND Ltx.IdMoeda_Recebimento = Lfc.IdMoeda_Origem
             WHERE
                Ltx.IdTaxa_Logistica_Exibicao IN (245 /*INCENTIVO ASIA*/, 441/*INCENTIVO TERMINAL*/, 517/*INCENTIVO ASIA MARITIMO*/)
                AND Vlf.Situacao = 2 /*QUITADA*/
          ) Incbai ON Incbai.IdLogistica_House = Lhs.IdLogistica_House
       
          WHERE
          Lhs.Situacao_Agenciamento NOT IN (7)
             AND Lhs.Numero_Processo NOT LIKE '%test%'
             AND Lhs.Numero_Processo NOT LIKE '%DEMU%'
             AND Lhs.Agenciamento_Carga = 1
             AND YEAR(Lhs.Data_Abertura_Processo) >= 2022
             AND Lmo.IdMoeda = 110
       )
       SELECT
          *
       FROM
          CTE_Logistica
       WHERE
        ModalidadeCodigo IN (${modalidade})
        ${comissaoVendedor}
        ${ComissaoInside}
        ${vendedorID}
        ${InsideID}
        ${pagamento}
        ${recebimento}
        ${AgenteCodigo}
        ${Abertura_Processo}
        `